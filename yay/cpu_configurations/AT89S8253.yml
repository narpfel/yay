# TODO: Better name for `signature_contents`.
# TODO: Should there be the ability to specify valid values? Pro: More
# information in config file rather than in code. Con: How to specify complex
# values such as `Register` objects or (esp. for `direct`) the possibility for
# both integers *and* register objects?
signature_contents:
    direct:
        length: 8
        short: null
    register:
        length: 3
        short: "r"
    indirect:
        length: 1
        short: "i"
    immediate:
        legnth: 8
        short: null
    relative:
        length: 8
        short: null
    addr11:
        length: 11
        short: "a"
    accu:
        length: 0
        short: null
    # And so on...
mnemonics:
    ACALL:
        - signature: ["addr11"]
          opcode:
              - ["a10", "a9", "a8", 1, 0, 0, 0, 1]
              - ["a7", "a6", "a5", "a4", "a3", "a2", "a1", "a0"]
    ADD:
        - signature: ["direct"]
          opcode:
              - [0b0010_0101]
              - ["direct"]
        - signature: ["register"]
          opcode:
              - [0, 0, 1, 0, 1, "r2", "r1", "r0"]
        - signature: ["indirect"]
          opcode:
              - [0, 0, 1, 0, 0, 1, 1, "i0"]
    ADDI:
        - signature: ["immediate"]
          opcode:
              - [0b0010_0100]
              - ["immediate"]
    ADDC:
        - signature: ["direct"]
          opcode:
              - [0b0011_0101]
              - ["direct"]
        - signature: ["register"]
          opcode:
              - [0, 0, 1, 1, 1, "r2", "r1", "r0"]
        - signature: ["indirect"]
          opcode:
              - [0, 0, 1, 1, 0, 1, 1, "i0"]
    ADDCI:
        - signature: ["immediate"]
          opcode:
              - [0b0011_0100]
              - ["immediate"]
    AJMP:
        - signature: ["addr11"]
          opcode:
              - ["a10", "a9", "a8", 0, 0, 0, 0, 1]
              - ["a7", "a6", "a5", "a4", "a3", "a2", "a1", "a0"]
              # alternatively: `- ["low(addr11)"]`â€½
    AND:
        - signature: ["direct"]
          opcode:
              - [0b0101_0101]
              - ["direct"]
        - signature: ["register"]
          opcode:
              - [0, 1, 0, 1, 1, "r2", "r1", "r0"]
        - signature: ["indirect"]
          opcode:
              - [0, 1, 0, 1, 0, 1, 1, "i0"]
        - signature: ["direct", "immediate"]
          opcode:
              - [0b0101_0011]
              - ["direct"]
              - ["immediate"]
        - signature: ["direct", "accu"]
          opcode:
              - [0b0101_0010]
              - ["direct"]
    ANDI:
        - signature: ["immediate"]
          opcode:
              - [0b0101_0100]
              - ["immediate"]
    CJNE:
        - signature: ["register", "immediate", "relative"]
          opcode:
              - [1, 0, 1, 1, 1, "r2", "r1", "r0"]
              - ["immediate"]
              - ["relative"]
        # TODO!
    CLR:
        - signature: []
          opcode:
              - [0b1110_0100]

registers:
    P1: 0x90
    A:
        import: "Accumulator"
        call: []
    R0:
        import: "Register"
        call: [0, true]
    R1:
        import: "Register"
        call: [1, true]
    R2:
        import: "Register"
        call: [2]
    R3:
        import: "Register"
        call: [3]
    R4:
        import: "Register"
        call: [4]
    R5:
        import: "Register"
        call: [5]
    R6:
        import: "Register"
        call: [6]
    R7:
        import: "Register"
        call: [7]

additional_names:
    at:
        import: "at"

importing:
    additional_names: "yay.cpu"
    registers: "yay.registers"
