# TODO: Better name for `signature_contents`.
# TODO: Should there be the ability to specify valid values? Pro: More
# information in config file rather than in code. Con: How to specify complex
# values such as `Register` objects or (esp. for `direct`) the possibility for
# both integers *and* register objects?
signature_contents:
    direct:
        length: 8
        short: null
    direct_dest:
        length: 8
        short: null
    register:
        length: 3
        short: "r"
    indirect:
        length: 1
        short: "i"
    immediate:
        length: 8
        short: null
    immediate16:
        length: 16
        short: "s"
    relative:
        length: 8
        short: null
        alternatives:
            - "label"
            - "addr16"
    addr11:
        length: 11
        short: "a"
        alternatives:
            - "label"
            - "addr16"
    addr16:
        length: 16
        short: "l"
        alternatives:
            - "label"
    accu:
        length: 0
        short: null
    dptr:
        length: 0
        short: null
    indirect_dptr:
        length: 0
        short: null
    # The result of `at(A + DPTR)`
    dptr_offset:
        length: 0
        short: null
    # The result of `at(A + PC)`
    pc_offset:
        length: 0
        short: null
    carry:
        length: 0
        short: null
    bit:
        length: 8
        short: null
    not_bit:
        length: 8
        short: null
    # And so on...
mnemonics:
    ACALL:
        - signature: ["addr11"]
          opcode:
              - ["a10", "a9", "a8", 1, 0, 0, 0, 1]
              - ["a7", "a6", "a5", "a4", "a3", "a2", "a1", "a0"]
    ADD:
        - signature: ["direct"]
          opcode:
              - [0b0010_0101]
              - ["direct"]
        - signature: ["register"]
          opcode:
              - [0, 0, 1, 0, 1, "r2", "r1", "r0"]
        - signature: ["indirect"]
          opcode:
              - [0, 0, 1, 0, 0, 1, 1, "i0"]
        - signature: ["immediate"]
          opcode:
            - [0b0010_0100]
            - ["immediate"]
    ADDC:
        - signature: ["direct"]
          opcode:
              - [0b0011_0101]
              - ["direct"]
        - signature: ["register"]
          opcode:
              - [0, 0, 1, 1, 1, "r2", "r1", "r0"]
        - signature: ["indirect"]
          opcode:
              - [0, 0, 1, 1, 0, 1, 1, "i0"]
        - signature: ["immediate"]
          opcode:
            - [0b0011_0100]
            - ["immediate"]
    AJMP:
        - signature: ["addr11"]
          opcode:
              - ["a10", "a9", "a8", 0, 0, 0, 0, 1]
              - ["a7", "a6", "a5", "a4", "a3", "a2", "a1", "a0"]
              # alternatively: `- ["low(addr11)"]`â€½
    AND:
        - signature: ["direct"]
          opcode:
              - [0b0101_0101]
              - ["direct"]
        - signature: ["register"]
          opcode:
              - [0, 1, 0, 1, 1, "r2", "r1", "r0"]
        - signature: ["indirect"]
          opcode:
              - [0, 1, 0, 1, 0, 1, 1, "i0"]
        - signature: ["direct", "immediate"]
          opcode:
              - [0b0101_0011]
              - ["direct"]
              - ["immediate"]
        - signature: ["direct", "accu"]
          opcode:
              - [0b0101_0010]
              - ["direct"]
        - signature: ["immediate"]
          opcode:
            - [0b0101_0100]
            - ["immediate"]
        - signature: ["bit"]
          opcode:
              - [0b1000_0010]
              - ["bit"]
        - signature: ["not_bit"]
          opcode:
              - [0b1011_0000]
              - ["not_bit"]
    CJNE:
        - signature: ["accu", "direct", "relative"]
          opcode:
              - [0b1011_0101]
              - ["direct"]
              - ["relative"]
        - signature: ["accu", "immediate", "relative"]
          opcode:
              - [0b1011_0100]
              - ["immediate"]
              - ["relative"]
        - signature: ["register", "immediate", "relative"]
          opcode:
              - [1, 0, 1, 1, 1, "r2", "r1", "r0"]
              - ["immediate"]
              - ["relative"]
        - signature: ["indirect", "immediate", "relative"]
          opcode:
              - [1, 0, 1, 1, 0, 1, 1, "i0"]
              - ["immediate"]
              - ["relative"]
    CLR:
        - signature: []
          opcode:
              - [0b1110_0100]
        - signature: ["carry"]
          opcode:
              - [0b1100_0011]
        - signature: ["bit"]
          opcode:
              - [0b1100_0010]
              - ["bit"]
    CPL:
        - signature: []
          opcode:
              - [0b1111_0100]
        - signature: ["carry"]
          opcode:
              - [0b1011_0011]
        - signature: ["bit"]
          opcode:
              - [0b1011_0010]
              - ["bit"]
    DA:
        - signature: []
          opcode:
              - [0b1101_0100]
    DEC:
        - signature: []
          opcode:
              - [0b0001_0100]
        - signature: ["register"]
          opcode:
              - [0, 0, 0, 1, 1, "r2", "r1", "r0"]
        - signature: ["direct"]
          opcode:
              - [0b0001_0101]
              - ["direct"]
        - signature: ["indirect"]
          opcode:
              - [0, 0, 0, 1, 0, 1, 1, "i0"]
    DIV:
        - signature: []
          opcode:
              - [0b1000_0100]
    DJNZ:
        - signature: ["register", "relative"]
          opcode:
              - [1, 1, 0, 1, 1, "r2", "r1", "r0"]
              - ["relative"]
        - signature: ["direct", "relative"]
          opcode:
              - [0b1101_0101]
              - ["direct"]
              - ["relative"]
    INC:
        - signature: []
          opcode:
              - [0b0000_0100]
        - signature: ["register"]
          opcode:
              - [0, 0, 0, 0, 1, "r2", "r1", "r0"]
        - signature: ["direct"]
          opcode:
              - [0b0000_0101]
              - ["direct"]
        - signature: ["indirect"]
          opcode:
              - [0, 0, 0, 0, 0, 1, 1, "i0"]
        - signature: ["dptr"]
          opcode:
              - [0b1010_0011]
    JB:
        - signature: ["bit", "relative"]
          opcode:
              - [0b0010_0000]
              - ["bit"]
              - ["relative"]
    JBC:
        - signature: ["bit", "relative"]
          opcode:
              - [0b0001_0000]
              - ["bit"]
              - ["relative"]
    JC:
        - signature: ["relative"]
          opcode:
              - [0b0100_0000]
              - ["relative"]
    # TODO: JMP(at(A + DPTR))
    JMP:
        - signature: ["dptr_offset"]
          opcode:
              - [0b0111_0011]
    JNB:
        - signature: ["bit", "relative"]
          opcode:
              - [0b0011_0000]
              - ["bit"]
              - ["relative"]
    JNC:
        - signature: ["relative"]
          opcode:
              - [0b0101_0000]
              - ["relative"]
    JNZ:
        - signature: ["relative"]
          opcode:
              - [0b0111_0000]
              - ["relative"]
    JZ:
        - signature: ["relative"]
          opcode:
              - [0b0110_0000]
              - ["relative"]
    LCALL:
        - signature: ["addr16"]
          opcode:
              - [0b0001_0010]
              - ["l15", "l14", "l13", "l12", "l11", "l10", "l9", "l8"]
              - ["l7", "l6", "l5", "l4", "l3", "l2", "l1", "l0"]
    LJMP:
        - signature: ["addr16"]
          opcode:
              - [0b0000_0010]
              - ["l15", "l14", "l13", "l12", "l11", "l10", "l9", "l8"]
              - ["l7", "l6", "l5", "l4", "l3", "l2", "l1", "l0"]
    LDR:
        - signature: ["register"]
          opcode:
              - [1, 1, 1, 0, 1, "r2", "r1", "r0"]
        - signature: ["indirect"]
          opcode:
              - [1, 1, 1, 0, 0, 1, 1, "i0"]
    LDD:
        - signature: ["direct"]
          opcode:
              - [0b1110_0101]
              - ["direct"]
    LDI:
        - signature: ["immediate"]
          opcode:
              - [0b0111_0100]
              - ["immediate"]
    STR:
        - signature: ["register"]
          opcode:
              - [1, 1, 1, 1, 1, "r2", "r1", "r0"]
        - signature: ["indirect"]
          opcode:
              - [1, 1, 1, 1, 0, 1, 1, "i0"]
    MOV:
        - signature: ["register", "direct"]
          opcode:
              - [1, 0, 1, 0, 1, "r2", "r1", "r0"]
              - ["direct"]
        - signature: ["direct", "register"]
          opcode:
              - [1, 0, 0, 0, 1, "r2", "r1", "r0"]
              - ["direct"]
        # TODO: `MOV(direct, direct)` is impossible.
        # Maybe use `direct_dest` as an ugly hack:
        - signature: ["direct", "direct_dest"]
          opcode:
              - [0b1000_0101]
              - ["direct"]
              - ["direct_dest"]
        - signature: ["direct", "indirect"]
          opcode:
              - [1, 0, 0, 0, 0, 1, 1, "i0"]
              - ["direct"]
        - signature: ["indirect", "direct"]
          opcode:
              - [1, 0, 1, 0, 0, 1, 1, "i0"]
              - ["direct"]
        - signature: ["register", "immediate"]
          opcode:
              - [0, 1, 1, 1, 1, "r2", "r1", "r0"]
              - ["immediate"]
        - signature: ["direct", "immediate"]
          opcode:
              - [0b0111_0101]
              - ["direct"]
              - ["immediate"]
        - signature: ["indirect", "immediate"]
          opcode:
              - [0, 1, 1, 1, 0, 1, 1, "i0"]
              - ["immediate"]
        - signature: ["dptr", "immediate16"]
          opcode:
              - [0b1001_0000]
              - ["s15", "s14", "s13", "s12", "s11", "s10", "s9", "s8"]
              - ["s7", "s6", "s5", "s4", "s3", "s2", "s1", "s0"]
    STD:
        - signature: ["direct"]
          opcode:
              - [0b1111_0101]
              - ["direct"]
    LDB:
        - signature: ["bit"]
          opcode:
              - [0b1010_0010]
              - ["bit"]
    STB:
        - signature: ["bit"]
          opcode:
              - [0b1001_0010]
              - ["bit"]
    LPM:
        - signature: ["dptr_offset"]
          opcode:
              - [0b1001_0011]
        - signature: ["pc_offset"]
          opcode:
              - [0b1000_0011]
    LDX:
        - signature: ["indirect"]
          opcode:
              - [1, 1, 1, 0, 0, 0, 1, "i0"]
        - signature: ["indirect_dptr"]
          opcode:
              - [0b1110_0000]
    STX:
        - signature: ["indirect"]
          opcode:
              - [1, 1, 1, 1, 0, 0, 1, "i0"]
        - signature: ["indirect_dptr"]
          opcode:
              - [0b1111_0000]
    MUL:
        - signature: []
          opcode:
              - [0b1010_0100]
    NOP:
        - signature: []
          opcode:
              - [0b0000_0000]
    OR:
        - signature: ["register"]
          opcode:
              - [0, 1, 0, 0, 1, "r2", "r1", "r0"]
        - signature: ["direct"]
          opcode:
              - [0b_0100_0101]
              - ["direct"]
        - signature: ["indirect"]
          opcode:
              - [0, 1, 0, 0, 0, 1, 1, "i0"]
        - signature: ["direct", "accu"]
          opcode:
              - [0b0100_0010]
              - ["direct"]
        - signature: ["direct", "immediate"]
          opcode:
              - [0b0100_0011]
              - ["direct"]
              - ["immediate"]
        - signature: ["bit"]
          opcode:
              - [0b0111_0010]
              - ["bit"]
        - signature: ["not_bit"]
          opcode:
              - [0b1010_0000]
              - ["not_bit"]
        - signature: ["immediate"]
          opcode:
              - [0b_0100_0100]
              - ["immediate"]
    POP:
        - signature: ["direct"]
          opcode:
              - [0b1101_0000]
              - ["direct"]
    PUSH:
        - signature: ["direct"]
          opcode:
              - [0b1100_0000]
              - ["direct"]
    RET:
        - signature: []
          opcode:
              - [0b0010_0010]
    RETI:
        - signature: []
          opcode:
              - [0b0011_0010]
    RL:
        - signature: []
          opcode:
              - [0b0010_0011]
    RLC:
        - signature: []
          opcode:
              - [0b0011_0011]
    RR:
        - signature: []
          opcode:
              - [0b0000_0011]
    RRC:
        - signature: []
          opcode:
              - [0b0001_0011]
    SET:
        - signature: ["carry"]
          opcode:
              - [0b1101_0011]
        - signature: ["bit"]
          opcode:
              - [0b1101_0010]
              - ["bit"]
    SJMP:
        - signature: ["relative"]
          opcode:
              - [0b1000_0000]
              - ["relative"]
    SUBB:
        - signature: ["register"]
          opcode:
              - [1, 0, 0, 1, 1, "r2", "r1", "r0"]
        - signature: ["direct"]
          opcode:
              - [0b1001_0101]
              - ["direct"]
        - signature: ["indirect"]
          opcode:
              - [1, 0, 0, 1, 0, 1, 1, "i0"]
        - signature: ["immediate"]
          opcode:
              - [0b1001_0100]
              - ["immediate"]
    SWAP:
        - signature: []
          opcode:
              - [0b1100_0100]
    XCH:
        - signature: ["accu", "register"]
          opcode:
              - [1, 1, 0, 0, 1, "r2", "r1", "r0"]
        - signature: ["accu", "direct"]
          opcode:
              - [0b1100_0101]
              - ["direct"]
        - signature: ["accu", "indirect"]
          opcode:
              - [1, 1, 0, 0, 0, 1, 1, "i0"]
    XCHD:
        - signature: ["accu", "indirect"]
          opcode:
              - [1, 1, 0, 1, 0, 1, 1, "i0"]
    XOR:
        - signature: ["register"]
          opcode:
              - [0, 1, 1, 0, 1, "r2", "r1", "r0"]
        - signature: ["direct"]
          opcode:
              - [0b0110_0101]
              - ["direct"]
        - signature: ["indirect"]
          opcode:
              - [0, 1, 1, 0, 0, 1, 1, "i0"]
        - signature: ["direct", "accu"]
          opcode:
              - [0b0110_0010]
              - ["direct"]
        - signature: ["direct", "immediate"]
          opcode:
              - [0b0110_0011]
              - ["direct"]
              - ["immediate"]
        - signature: ["immediate"]
          opcode:
              - [0b0110_0100]
              - ["immediate"]

sfrs:
    import: "SFR"
    with_key: true
    call_many:
        P0: [0x80]
        SP: [0x81]
        DPL: [0x82]
        DPH: [0x83]
        PCON: [0x87]
        TCON: [0x88]
        TMOD: [0x89]
        TL0: [0x8A]
        TL1: [0x8B]
        TH0: [0x8C]
        TH1: [0x8D]
        AUXR: [0x8E]
        CKCON: [0x8F]
        P1: [0x90]
        SCON: [0x98]
        SBUF: [0x99]
        P2: [0xA0]
        IE: [0xA8]
        P3: [0xB0]
        IP: [0xB8]
        T2CON: [0xC8]
        RCAP2L: [0xCA]
        RCAP2H: [0xCB]
        TL2: [0xCC]
        TH2: [0xCD]
        PSW: [0xD0]
        ACC: [0xE0]
        B: [0xF0]

registers:
    A:
        import: "Accumulator"
        call: []
    C:
        import: "Carry"
        call: []
    R0:
        import: "Register"
        call: [0, true]
    R1:
        import: "Register"
        call: [1, true]
    R2:
        import: "Register"
        call: [2]
    R3:
        import: "Register"
        call: [3]
    R4:
        import: "Register"
        call: [4]
    R5:
        import: "Register"
        call: [5]
    R6:
        import: "Register"
        call: [6]
    R7:
        import: "Register"
        call: [7]
    DPTR:
        import: "DPTR"
        call: []
    PC:
        import: "PC"
        call: []

named_bits:
    import: "NamedBit"
    with_key: true
    call_many:
        # from TCON (0x88)
        IT0: [0x88]
        IE0: [0x89]
        IT1: [0x8A]
        IE1: [0x8B]
        TR0: [0x8C]
        TF0: [0x8D]
        TR1: [0x8E]
        TF1: [0x8F]
        # from SCON (0x98)
        RI: [0x98]
        TI: [0x99]
        RB8: [0x9A]
        TB8: [0x9B]
        REN: [0x9C]
        SM2: [0x9D]
        SM1: [0x9E]
        # `FE` and `SM0` are the same bit
        FE: [0x9F]
        SM0: [0x9F]
        # from IE (0xA8)
        EX0: [0xA8]
        ET0: [0xA9]
        EX1: [0xAA]
        ET1: [0xAB]
        ES: [0xAC]
        ET2: [0xAE]
        # IE[6] is reserved
        EA: [0xAF]
        # from IP (0xB8)
        PX0: [0xB8]
        PT0: [0xB9]
        PX1: [0xBA]
        PT1: [0xBB]
        PS: [0xBC]
        PT2: [0xBD]
        # IP[6] and IP[7] are reserved
        # from T2CON (0xC8)
        CPRL2: [0xC8]
        CT2: [0xC9]
        TR2: [0xCA]
        EXEN2: [0xCB]
        TCLK: [0xCC]
        RCLK: [0xCD]
        EXF2: [0xCE]
        TF2: [0xCF]
        # from PSW (0xD0)
        P: [0xD0]
        # PSW[1] is reserved
        OV: [0xD2]
        RS0: [0xD3]
        RS1: [0xD4]
        F0: [0xD5]
        AC: [0xD6]
        CY: [0xD7]

additional_names:
    at:
        import: "at"
    Byte:
        import: "Byte"
    Bit:
        import: "Bit"
    Label:
        import: "Label"

parse_helpers:
    matchers:
        import: "matchers"
    converters:
        import: "converters"

macros_from:
    macros_from:
        import: "Macros"

importing:
    additional_names: "yay.cpus.MCS_51"
    registers: "yay.cpus.MCS_51"
    sfrs: "yay.cpus.MCS_51"
    parse_helpers: "yay.cpus.MCS_51"
    named_bits: "yay.cpus.MCS_51"
    macros_from: "yay.cpus.MCS_51"

all:
    - "mnemonics"
    - "registers"
    - "sfrs"
    - "additional_names"
    - "named_bits"
